name: CI

# Allow the workflow to push changes back (used to update coverage badges)
permissions:
  contents: write

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # allow pushing back from the workflow
          persist-credentials: true
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release


      - name: Test with coverage (coverlet.msbuild)
        run: |
          dotnet test ./test/Karel.Tests/Karel.Tests.csproj --configuration Release /p:CollectCoverage=true /p:CoverletOutput=./test/Karel.Tests/TestResults/coverage /p:CoverletOutputFormat=cobertura

      - name: Show TestResults tree (diagnostic)
        run: |
          echo "--- TestResults tree ---"
          find ./test/Karel.Tests/TestResults -maxdepth 4 -type f -print || true

      - name: Install ReportGenerator (for coverage reports & badges)
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool --version 5.1.20
          echo "##[group]Installed dotnet-reportgenerator-globaltool"
          dotnet tool list -g
          echo "##[endgroup]"

      - name: Generate coverage report and badges
        run: |
          # Ensure the dotnet tool path is available
          export PATH="$HOME/.dotnet/tools:$PATH"
          mkdir -p ./test/Karel.Tests/TestResults/CoverageReport
          # Use the normalized coverage.xml file
          if [ ! -f ./test/Karel.Tests/TestResults/coverage.cobertura.xml ]; then
            echo "coverage.cobertura.xml not found, aborting"
            ls -la ./test/Karel.Tests/TestResults || true
            exit 1
          fi
          reportgenerator -reports:./test/Karel.Tests/TestResults/coverage.cobertura.xml -targetdir:./test/Karel.Tests/TestResults/CoverageReport -reporttypes:HtmlSummary;Badges
          echo "Coverage report generated at ./test/Karel.Tests/TestResults/CoverageReport"

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./test/Karel.Tests/TestResults/CoverageReport

      - name: Commit coverage badges to repo
        if: github.ref_name == 'main'
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          mkdir -p docs/coverage-badges
          # copy only SVG badges into docs/coverage-badges
          cp -v ./test/Karel.Tests/TestResults/CoverageReport/*.svg docs/coverage-badges/ || true
          git add docs/coverage-badges || true
          # commit only if something changed, and use [skip ci] to avoid triggering another run
          if ! git diff --staged --quiet; then
            git commit -m "chore: update coverage badges [skip ci]"
            git push origin HEAD:${BRANCH}
          else
            echo "No badge changes to commit"
          fi
